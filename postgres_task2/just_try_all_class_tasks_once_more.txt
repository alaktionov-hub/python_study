alaktionov@firefly ~ $ sudo su postgres 
[sudo] password for alaktionov: 
bash-5.0$ cd ~
bash-5.0$ psql 
psql: /usr/pgsql-11/lib/libpq.so.5: no version information available (required by psql)
psql: /usr/pgsql-11/lib/libpq.so.5: no version information available (required by psql)
psql (11.6)
Type "help" for help.

postgres=# \l
                                   List of databases
     Name     |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileges   
--------------+----------+----------+-------------+-------------+-----------------------
 newtest      | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 postgres     | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 template0    | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
              |          |          |             |             | postgres=CTc/postgres
 template1    | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
              |          |          |             |             | postgres=CTc/postgres
 test         | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 tv_show_data | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
(6 rows)

postgres=# CREATE DATABASE test_from_class;
CREATE DATABASE
postgres=# 
postgres=# \c te
template0        template1        test             test_from_class  
postgres=# \c test_from_class 
You are now connected to database "test_from_class" as user "postgres".
test_from_class=# create table word (id serial, word varchar(255), vocabulary_id integer);
CREATE TABLE
test_from_class=# create table vocabulary (id serial, name varchar(255), info text);
CREATE TABLE
test_from_class=# \d vocabulary
                                    Table "public.vocabulary"
 Column |          Type          | Collation | Nullable |                Default                 
--------+------------------------+-----------+----------+----------------------------------------
 id     | integer                |           | not null | nextval('vocabulary_id_seq'::regclass)
 name   | character varying(255) |           |          | 
 info   | text                   |           |          | 

test_from_class=# insert into vocabulary (name) values ('verbs');
INSERT 0 1
test_from_class=# select * from vocabulary;
 id | name  | info 
----+-------+------
  1 | verbs | 
(1 row)

test_from_class=# insert into vocabulary (name) values ('IT'), ('Silicon Valley season 1');
INSERT 0 2
test_from_class=# select * from vocabulary;
 id |          name           | info 
----+-------------------------+------
  1 | verbs                   | 
  2 | IT                      | 
  3 | Silicon Valley season 1 | 
(3 rows)

test_from_class=# insert into vocabulary select * from vocabulary;
INSERT 0 3
test_from_class=# select * from vocabulary;
 id |          name           | info 
----+-------------------------+------
  1 | verbs                   | 
  2 | IT                      | 
  3 | Silicon Valley season 1 | 
  1 | verbs                   | 
  2 | IT                      | 
  3 | Silicon Valley season 1 | 
(6 rows)

test_from_class=# SELECT 1;
 ?column? 
----------
        1
(1 row)

test_from_class=# select CURRENT_TIME;
    current_time    
--------------------
 23:20:22.463255+02
(1 row)

test_from_class=# select age(timestamp '1957-06-13');
           age           
-------------------------
 62 years 5 mons 29 days
(1 row)

test_from_class=# select age(timestamp '0-0-0');
ERROR:  date/time field value out of range: "0-0-0"
LINE 1: select age(timestamp '0-0-0');
                             ^
HINT:  Perhaps you need a different "datestyle" setting.
test_from_class=# select age(timestamp '1500-1-1');
            age            
---------------------------
 519 years 11 mons 11 days
(1 row)

test_from_class=# select age(timestamp '1-1-1');
           age            
--------------------------
 18 years 11 mons 11 days
(1 row)

test_from_class=# select age(timestamp '0-1-1');
ERROR:  date/time field value out of range: "0-1-1"
LINE 1: select age(timestamp '0-1-1');
                             ^
HINT:  Perhaps you need a different "datestyle" setting.
test_from_class=# SELECT CURRENT_TIMESTAMP;
       current_timestamp       
-------------------------------
 2019-12-12 23:21:56.967703+02
(1 row)

test_from_class=# SELECT LOCALTIMESTAMP;
       localtimestamp       
----------------------------
 2019-12-12 23:22:05.063842
(1 row)

test_from_class=# SELECT justify_days(interval '35 days');
 justify_days 
--------------
 1 mon 5 days
(1 row)

test_from_class=# SELECT justify_hours(interval '27 hours');
 justify_hours  
----------------
 1 day 03:00:00
(1 row)

test_from_class=# SELECT * FROM vocabulary;
 id |          name           | info 
----+-------------------------+------
  1 | verbs                   | 
  2 | IT                      | 
  3 | Silicon Valley season 1 | 
  1 | verbs                   | 
  2 | IT                      | 
  3 | Silicon Valley season 1 | 
(6 rows)

test_from_class=# SELECT * FROM word;
 id | word | vocabulary_id 
----+------+---------------
(0 rows)

test_from_class=# select distinct * from vocabulary;
 id |          name           | info 
----+-------------------------+------
  2 | IT                      | 
  1 | verbs                   | 
  3 | Silicon Valley season 1 | 
(3 rows)

test_from_class=# insert into word (word, vocabulary_id) values('have', 1), ('IP', 2), ('Kanban', 3);
INSERT 0 3
test_from_class=# insert into word (word, vocabulary_id) values('have', 7), ('TCP/IP', 2), ('Function', 3);
INSERT 0 3
test_from_class=# select * from word;
 id |   word   | vocabulary_id 
----+----------+---------------
  1 | have     |             1
  2 | IP       |             2
  3 | Kanban   |             3
  4 | have     |             7
  5 | TCP/IP   |             2
  6 | Function |             3
(6 rows)

test_from_class=# select word from word where id > 5;
   word   
----------
 Function
(1 row)

test_from_class=# select word from word where id > 3;
   word   
----------
 have
 TCP/IP
 Function
(3 rows)

test_from_class=# select word from word where id > 3;
   word   
----------
 have
 TCP/IP
 Function
(3 rows)

test_from_class=# select word from word where id > 1;
   word   
----------
 IP
 Kanban
 have
 TCP/IP
 Function
(5 rows)

test_from_class=# select word from word where id < 2;
 word 
------
 have
(1 row)

test_from_class=# select word from word where vocabulary_id < 4 and id < 6;
  word  
--------
 have
 IP
 Kanban
 TCP/IP
(4 rows)

test_from_class=# select id, word, vocabulary_id from word where vocabulary_id < 4 and id < 6;
 id |  word  | vocabulary_id 
----+--------+---------------
  1 | have   |             1
  2 | IP     |             2
  3 | Kanban |             3
  5 | TCP/IP |             2
(4 rows)

test_from_class=# select vocabulary_id from word where vocabulary_id < 4 
test_from_class-# and id < 6 group by vocabulary_id;
 vocabulary_id 
---------------
             3
             1
             2
(3 rows)

test_from_class=# 
test_from_class=# select count(*), vocabulary_id from word where vocabulary_id < 4
test_from_class-# and id < 6 group by vocabulary_id;
 count | vocabulary_id 
-------+---------------
     1 |             3
     1 |             1
     2 |             2
(3 rows)

test_from_class=# select count(*), vocabulary_id from word where vocabulary_id < 4
test_from_class-# and id < 6 group by vocabulary_id having count(*) > 1;
 count | vocabulary_id 
-------+---------------
     2 |             2
(1 row)

test_from_class=# select * from word order by vocabulary_id;
 id |   word   | vocabulary_id 
----+----------+---------------
  1 | have     |             1
  2 | IP       |             2
  5 | TCP/IP   |             2
  3 | Kanban   |             3
  6 | Function |             3
  4 | have     |             7
(6 rows)

test_from_class=# select * from word order by 3;
 id |   word   | vocabulary_id 
----+----------+---------------
  1 | have     |             1
  2 | IP       |             2
  5 | TCP/IP   |             2
  3 | Kanban   |             3
  6 | Function |             3
  4 | have     |             7
(6 rows)

test_from_class=#  select * from word order by 3, 2;
 id |   word   | vocabulary_id 
----+----------+---------------
  1 | have     |             1
  2 | IP       |             2
  5 | TCP/IP   |             2
  6 | Function |             3
  3 | Kanban   |             3
  4 | have     |             7
(6 rows)

test_from_class=# select * from word order by 3, 2 limit 3;
 id |  word  | vocabulary_id 
----+--------+---------------
  1 | have   |             1
  2 | IP     |             2
  5 | TCP/IP |             2
(3 rows)

test_from_class=# select * from word order by 3, 2 limit 4;
 id |   word   | vocabulary_id 
----+----------+---------------
  1 | have     |             1
  2 | IP       |             2
  5 | TCP/IP   |             2
  6 | Function |             3
(4 rows)

test_from_class=# select * from word order by 3, 2 limit 3 offset 3;
 id |   word   | vocabulary_id 
----+----------+---------------
  6 | Function |             3
  3 | Kanban   |             3
  4 | have     |             7
(3 rows)

test_from_class=# select * from word order by 3, 2 limit 3 offset 2;
 id |   word   | vocabulary_id 
----+----------+---------------
  5 | TCP/IP   |             2
  6 | Function |             3
  3 | Kanban   |             3
(3 rows)

test_from_class=# select * from word order by 3, 2 limit 3 offset 0;
 id |  word  | vocabulary_id 
----+--------+---------------
  1 | have   |             1
  2 | IP     |             2
  5 | TCP/IP |             2
(3 rows)

